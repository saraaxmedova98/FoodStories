# Generated by Django 3.0.6 on 2020-06-26 09:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50, verbose_name='Title')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(blank=True, max_length=50, null=True, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('source', models.CharField(blank=True, max_length=50, null=True, verbose_name='Source')),
                ('contacted_at', models.DateField(auto_now_add=True, null=True, verbose_name='Contacted at')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=50, verbose_name='Location')),
                ('phone', models.CharField(max_length=50, verbose_name='Phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(verbose_name='Website')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(default='', verbose_name='Description')),
                ('story_image', models.ImageField(blank=True, null=True, upload_to='stories', verbose_name='Story image')),
                ('cover_image', models.ImageField(default='stories/bg_4.jpg', upload_to='stories', verbose_name='Cover image')),
                ('story_count', models.IntegerField(default=0, verbose_name='Story count')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Updated date')),
                ('created_at', models.DateField(auto_now_add=True, null=True, verbose_name='Created date')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stories', to='stories.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Story',
                'verbose_name_plural': 'Stories',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subscribed_at', models.DateField(auto_now_add=True, null=True, verbose_name='Subscribed at')),
            ],
            options={
                'verbose_name': 'Subscribe',
                'verbose_name_plural': 'Subscribes',
            },
        ),
        migrations.CreateModel(
            name='TaggedStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story', to='stories.Story')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories_taggedstory_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='story',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='stories.TaggedStory', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='story',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipe', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(default='', verbose_name='Description')),
                ('ingredients', models.TextField(verbose_name='Ingredients')),
                ('prepare_time', models.CharField(max_length=50, verbose_name='Prepare time')),
                ('recipe_image', models.ImageField(blank=True, null=True, upload_to='recipes/', verbose_name='Recipe Image')),
                ('cover_image', models.ImageField(default='bg_4.jpg', upload_to='stories', verbose_name='Cover image')),
                ('recipe_count', models.IntegerField(default=0, verbose_name='Recipe count')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Updated date')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Created date')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='stories.Category', verbose_name='Category')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='user', max_length=50, verbose_name='Name')),
                ('email', models.EmailField(default='user@gmail.com', max_length=254, verbose_name='Email')),
                ('message', models.TextField(verbose_name='Description')),
                ('commented_at', models.DateField(auto_now_add=True, verbose_name='Commented at')),
                ('comment_reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='stories.Comment', verbose_name='Comment')),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='stories.Recipe', verbose_name='Recipe')),
                ('story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='stories.Story', verbose_name='Story')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
